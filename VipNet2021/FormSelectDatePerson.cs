using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.SqlClient;
using System.Drawing;
using System.Text;
using System.Windows.Forms;
using System.IO;
//using Microsoft.Office.Interop.Word;
using Excel = Microsoft.Office.Interop.Excel;



using RegKor.Classess;


namespace RegKor
{
    public partial class FormSelectDatePerson : Form
    {
        //ќбъект Excel
        private Microsoft.Office.Interop.Excel.Application ObjExcel;

        //объект массив excel книг
        private Microsoft.Office.Interop.Excel.Workbooks ObjWorkBooks;

        //ќбъект excel книга
        private Microsoft.Office.Interop.Excel.Workbook ObjWorkBook;

        //объект excel лист
        private Microsoft.Office.Interop.Excel.Worksheet ObjWorkSheet;

        public FormSelectDatePerson()
        {
            InitializeComponent();
        }

        private void button1_Click(object sender, EventArgs e)
        {

            string beginDate = this.dateTimePicker1.Value.ToShortDateString();
            string endDate = this.dateTimePicker2.Value.ToShortDateString();

            string fName = beginDate + "∆урнал”четаѕередачиѕерсональныхƒанных" + endDate;


            // —формируем данные дл€ выполнени€ отчЄта.
            //string query = "SELECT [id_карточки] " +
            //               ",[ќписание орреспондента] " +
            //               ",[ƒата»схода] " +
            //               ",[÷ельѕолучени€ѕерсональныхƒанных] " +
            //               ",[—оставѕерсональныхƒанных] " +
            //               ",[ќтметкаѕолучени€ќтказ] " +
            //               ",[ѕричина] " +
            //               "FROM [View∆урнал] " +
            //               "where [ƒата»схода] >= '" + beginDate + "' and [ƒата»схода] <= '" + endDate + "' ";

            ѕодключитьЅƒ connect = new ѕодключитьЅƒ();
            string sConnect = connect.—трокаѕодключени€();

            // ’ранит данные дл€ отчета.
            //List<∆урналѕерƒанных> list = new List<∆урналѕерƒанных>();

            // Ѕиблиотека дл€ хранени€ данных дл€ журнала.
            Dictionary<string, ∆урналѕерƒанных> dictionary = new Dictionary<string, ∆урналѕерƒанных>();


            using (SqlConnection con = new SqlConnection(sConnect))
            {
                con.Open();
                string query = "select * from dbo.View∆урнал”чЄтаѕерсональныхƒанных2 " +
                               "where [ƒата] >= '" + beginDate + "' and [ƒата] <= '" + endDate + "' ";

                DataSet ds = new DataSet();

                 // «аполним DataSet.
                SqlDataAdapter da = new SqlDataAdapter(query, con);
                da.Fill(ds, "View∆урнал”чЄтаѕерсональныхƒанных");

                // ѕолучим данные из таблицы которые соответсвуют 
                System.Data.DataTable tab1 = ds.Tables["View∆урнал”чЄтаѕерсональныхƒанных"];

                // —чЄтчик ключа дл€ инициативных записей.
                //int iKey = 1;
                int iKey = 0;

                foreach (DataRow row in tab1.Rows)
                {
                    iKey = Convert.ToInt32(row["id_карточки"]);

                    if (Convert.ToInt32(row["id_карточки"]) == 44440)
                    {
                        string iTest = "test";
                    }

                    ∆урналѕерƒанных журнал = new ∆урналѕерƒанных();
                    
#region —тара€ релизаци€ (ѕока не стирать вдруг понадобитс€ к ней вернутьс€).
                    //// ≈сли письмо не инициативное (имеетс€ id вход€щегно документа).
                    //if (row["id_¬ход€щегоƒокумента"] != DBNull.Value)
                    //{

                    //    // ключ.
                    //    string key = row["Ќомер¬ход€щий"].ToString().Trim();

                    //    журнал.ќписание орреспондента = row["ќписание орреспондента"].ToString().Trim();

                    //    //журнал. раткое—одержание = row[" раткое—одержание"].ToString().Trim();

                    //    журнал.Ќомер»сход€щий = row["Ќомер»сход€щий"].ToString().Trim();

                    //    журнал.ƒатаќтправки = Convert.ToDateTime(row["ƒата"]).ToShortDateString();

                    //    //журнал.Ќомер¬ход€щий = row["Ќомер¬ход€щий"].ToString().Trim();

                    //    // ѕроверим есть ли ещЄ записи в св€зующей таблице [—в€зующа€ арточка¬ход€ща€»сход€ща€] соответсвующие id карточки.
                    //    string numPoust = string.Empty;
                    //    string about = string.Empty;
                    //    numPoust = InputNumberPoust(con, ds, Convert.ToInt32(row["id_карточки"]), out about);
                    //    if (numPoust != "")
                    //    {
                    //        журнал.Ќомер¬ход€щий = numPoust.Trim();
                    //        журнал. раткое—одержание = about.Trim();
                    //    }
                    //    else
                    //    {
                    //        журнал.Ќомер¬ход€щий = row["Ќомер¬ход€щий"].ToString().Trim();
                    //        журнал. раткое—одержание = row[" раткое—одержание"].ToString().Trim();
                    //    }

                    //    try
                    //    {

                    //        // ѕолучим значение тестовое.
                    //        ∆урналѕерƒанных журнал2 = журнал;

                    //        // добавим в библиотеку пункт журнала.
                    //        dictionary.Add(key, журнал);


                    //    }
                    //    catch
                    //    {

                    //        //¬озмЄм запрос View 2 который у нас и заполним класс 

                    //        //∆урналѕерƒанных журналCath = new ∆урналѕерƒанных();

                    //        //возмЄм id карточки в качестве фильтра

                    //        /*
                    //         * ≈сли такой ключ уже существует в библиотеке, тогда запись с текущим ключом удал€етс€ 
                    //         * и перезаписываем с новыми данными.
                    //        */

                    //        ∆урналѕерƒанных журналCath = new ∆урналѕерƒанных();

                    //        // ѕолучим текущие данные из библиотеки.
                    //        string strTime = dictionary[key].ќписание орреспондента.Trim();
                    //        журналCath. раткое—одержание = dictionary[key]. раткое—одержание.Trim();
                    //        журналCath.Ќомер»сход€щий = dictionary[key].Ќомер»сход€щий.Trim();
                    //        журналCath.ƒатаќтправки = dictionary[key].ƒатаќтправки.Trim();
                    //        журналCath.Ќомер¬ход€щий = dictionary[key].Ќомер¬ход€щий.Trim();


                    //        string[] numN = key.Split('/');
                    //        string дата = ƒатаSQL.ƒата(DateTime.Now.Year.ToString()) + "0101";


                    //        string[] номерѕор€дковый = row["Ќомер»сход€щий»нициативный"].ToString().Split('/');

                    //        // ”знаем наименование организации куда направлено письмо.

                    //        string quer = "declare @id_карточка¬ход€ща€ int " +
                    //                     "set @id_карточка¬ход€ща€ = 0 " +
                    //                     "select @id_карточка¬ход€ща€ = id_карточка¬ход€ща€ from dbo.—в€зующа€ арточка¬ход€ща€»сход€ща€ " +
                    //                     "where id_карточка»сход€ща€ in ( " +
                    //                     "select id_карточки from  арточка»сход€ща€ " +
                    //                     "where Ќомерѕор€дковый = '" + номерѕор€дковый[1] + "') " +
                    //                     "if(@id_карточка¬ход€ща€ = 0) " +
                    //                     "begin  " +
                    //                     "select distinct ќписание орреспондента from  орреспонденты " +
                    //                     "where id_корреспондента in ( " +
                    //                     "select id_јдресата from  арточка»сход€ща€ " +
                    //            //"where Ќомерѕор€дковый = '6125') " +
                    //                     "where Ќомерѕор€дковый = '" + номерѕор€дковый[1] + "' and ƒата >= '20140101') " +
                    //                     "end " +
                    //                     "else " +
                    //                     "begin  " +
                    //                     "select ќписание орреспондента from dbo. орреспонденты  " +
                    //                     "where id_корреспондента in  " +
                    //                     "( select id_корреспондента from  арточка  " +
                    //                     "where id_карточки in  " +
                    //                     "( select id_карточка¬ход€ща€ from dbo.—в€зующа€ арточка¬ход€ща€»сход€ща€  " +
                    //                     "where id_карточка»сход€ща€ in  " +
                    //                     "( select id_карточки from dbo.View∆урнал”чЄтаперсональныхƒанных2  " +
                    //                     "where Ќомер¬ход€щий = '" + row["Ќомер¬ход€щий"].ToString().Trim() + "'))) " +
                    //                     "end ";

                    //        DataSet ds2 = new DataSet();

                    //        SqlDataAdapter da2 = new SqlDataAdapter(quer, con);
                    //        da2.Fill(ds2, "ѕроверка");

                    //        // ѕолучим данные из таблицы которые соответсвуют 
                    //        System.Data.DataTable tab22 = ds2.Tables["ѕроверка"];

                    //        // ≈сли количество записей в таблице корреспондентов больше 1
                    //        if (tab22.Rows.Count > 1)
                    //        {
                    //            StringBuilder buildCorr = new StringBuilder();

                    //            // «апишем описание корреспондента который был уже в 1 раз записан в библиотеку.
                    //            buildCorr.Append(strTime + ",");

                    //            foreach (DataRow r in tab22.Rows)
                    //            {
                    //                string корр = r["ќписание орреспондента"].ToString().Trim();
                    //                buildCorr.Append(корр + ",");
                    //            }

                    //            // ”берЄм последную зап€тую.
                    //            int leng = buildCorr.Length;

                    //            string корреспондент = string.Empty;
                    //            корреспондент = buildCorr.Remove(leng - 1, 1).ToString().Trim();

                    //            журналCath.ќписание орреспондента = корреспондент;

                    //            // ќчистим временную таблицу от содержимого, чтобы в следующую строку не попали не нужные данные.
                    //            tab22.Clear();

                    //        }
                    //        else
                    //        {
                    //            журналCath.ќписание орреспондента = row["ќписание орреспондента"].ToString().Trim() + ", \n" + strTime.Trim();

                    //            string querSelect = "select CONVERT(nvarchar, Ќомерѕѕ) + N'/' + RTRIM(LTRIM(CONVERT(nvarchar, " +
                    //                                "Ќомер¬ход))) AS 'Ќомер'  from  арточка " +
                    //                                "where id_карточки in ( " +
                    //                                "select id_карточка¬ход€ща€ from dbo.—в€зующа€ арточка¬ход€ща€»сход€ща€ " +
                    //                                "where id_карточка»сход€ща€ = " + Convert.ToInt32(row["id_карточки"]) + ")";

                    //            SqlDataAdapter daM = new SqlDataAdapter(querSelect, con);
                    //            daM.Fill(ds, "¬ход€щие");

                    //            // ѕолучим данные из таблицы которые соответсвуют 
                    //            System.Data.DataTable tabM = ds.Tables["¬ход€щие"];

                    //            // ’ранит итоговое значение.
                    //            StringBuilder buld = new StringBuilder();

                    //            foreach (DataRow r in tabM.Rows)
                    //            {
                    //                buld.Append(r["Ќомер"].ToString().Trim() + ", \n");
                    //            }

                    //            // ”далим последную зап€тую.
                    //            int countChar = buld.Length;
                    //            string numbers = string.Empty;

                    //            if (countChar > 0)
                    //            {
                    //                numbers = buld.Remove(countChar - 3, 3).ToString();
                    //                журналCath.Ќомер¬ход€щий = numbers.ToString().Trim();
                    //            }
                    //        }

                    //        // ”далим запись.
                    //        //dictionary.Remove(key);

                    //        // ƒобавим изменЄнные данные.
                    //        dictionary.Add(key + 1, журналCath);
                    //    }
                    //}
#endregion

                    // ѕроверим инициативное письмо или нет.
                    if (row["id_¬ход€щегоƒокумента"] != DBNull.Value)
                    {
                        // ѕолучим ключ дл€ билиотеки, в качестве ключа используем id карточки исход€щей.
                        string key = row["id_карточки"].ToString().Trim();// row["Ќомер¬ход€щий"].ToString().Trim();

                        журнал.ќписание орреспондента = row["ќписание орреспондента"].ToString().Trim();

                        журнал.Ќомер»сход€щий = row["Ќомер»сход€щий"].ToString().Trim();

                        журнал.ƒатаќтправки = Convert.ToDateTime(row["ƒата"]).ToShortDateString();

                        // ѕроверим есть ли ещЄ записи в св€зующей таблице [—в€зующа€ арточка¬ход€ща€»сход€ща€] соответсвующие id карточки.
                        string numPoust = string.Empty;
                        string about = string.Empty;
                        numPoust = InputNumberPoust(con, ds, Convert.ToInt32(row["id_карточки"]), out about);
                        if (numPoust != "")
                        {
                            журнал.Ќомер¬ход€щий = numPoust.Trim();
                            журнал. раткое—одержание = about.Trim();
                        }
                        else
                        {
                            журнал.Ќомер¬ход€щий = row["Ќомер¬ход€щий"].ToString().Trim();
                            журнал. раткое—одержание = row[" раткое—одержание"].ToString().Trim();
                        }

                        try
                        {
                            // ѕолучим значение тестовое.
                            ∆урналѕерƒанных журнал2 = журнал;

                            // добавим в библиотеку пункт журнала.
                            dictionary.Add(key, журнал);
                        }
                        catch
                        {

                            ∆урналѕерƒанных журналCath = new ∆урналѕерƒанных();

                            // ѕолучим текущие данные из библиотеки.
                            string strTime = dictionary[key].ќписание орреспондента.Trim();
                            журналCath. раткое—одержание = dictionary[key]. раткое—одержание.Trim();
                            журналCath.Ќомер»сход€щий = dictionary[key].Ќомер»сход€щий.Trim();
                            журналCath.ƒатаќтправки = dictionary[key].ƒатаќтправки.Trim();
                            журналCath.Ќомер¬ход€щий = dictionary[key].Ќомер¬ход€щий.Trim();

                            журналCath.ќписание орреспондента = row["ќписание орреспондента"].ToString().Trim() + ", \n" + strTime.Trim();

                            dictionary.Remove(key);

                            dictionary.Add(key, журналCath);

                        }
                    }
                    else
                    {

                        журнал.ќписание орреспондента = row["ќписание орреспондента"].ToString().Trim();

                        // ≈сли письмо инициативное.
                        журнал. раткое—одержание = row["—одержание»нициативное"].ToString().Trim();
                        журнал.Ќомер»сход€щий = row["Ќомер»сход€щий»нициативный"].ToString().Trim();
                        журнал.ƒатаќтправки = Convert.ToDateTime(row["ƒата"]).ToShortDateString();

                        // ѕолучим номер пор€дковый.
                        string[] numArr = журнал.Ќомер»сход€щий.Split('/');

                        if (Convert.ToInt32(row["id_карточки"]) == 46095)
                        {
                            string test = "Test";
                        }

                        string queryOP = "select ќснованиеѕередачи from ќснованиепередачи " +
                                         "where id_основаниеѕередачи in ( " +
                                         "select id_ќснованиеѕередачи from —в€зующа€÷ельѕолучениперсональныхƒанных " +
                                         "where id_карточки = " + Convert.ToInt32(row["id_карточки"]) + ") ";


                        SqlDataAdapter daOP = new SqlDataAdapter(queryOP, con);
                        daOP.Fill(ds, "ќснованиеѕередачи");

                        // ѕолучим данные из таблицы которые соответсвуют 
                        System.Data.DataTable tabOP = ds.Tables["ќснованиеѕередачи"];

                        if (tabOP.Rows.Count != 0)
                        {
                            —трокаќтчЄта strOt = new —трокаќтчЄта(tabOP);
                            string str»ниц = strOt.ConvertStringBuilder();

                            журнал.Ќомер¬ход€щий = str»ниц;

                            // ќчистим таблицу.
                            ds.Tables["ќснованиеѕередачи"].Clear();
                        }
                        else
                        {
                            журнал.Ќомер¬ход€щий = "»нициативное";
                        }

                        // ключ.
                        //string key = row["Ќомер¬ход€щий"].ToString().Trim();

                        //iKey++; - старый функционал.

                        //try
                        //{
                            // добавим в библиотеку пункт журнала.
                            dictionary.Add(iKey.ToString().Trim(), журнал);
                        //}
                        //catch
                        //{
                        //    //string strTime = dictionary[iKey.ToString().Trim()].ќписание орреспондента.Trim();
                        //    iKey++;
                        //    dictionary.Add(iKey.ToString().Trim(), журнал);
                          
                        //}
                    }

                    //list.Add(журнал);
                }

            }

            // ѕеременные дл€ установки ширины колонки.
            int width1Column = 15;
            int width5Column = 20;
            int widthColumn = 50;
            int widthShortContColumn = 70;

            int ширина—троки = 90;
            int ширина—троки2 = 50;

            Microsoft.Office.Interop.Excel.Application ObjExcel = new Microsoft.Office.Interop.Excel.Application();
            Microsoft.Office.Interop.Excel.Workbook ObjWorkBook;
            Microsoft.Office.Interop.Excel.Worksheet ObjWorkSheet;

            // нига.
            ObjWorkBook = ObjExcel.Workbooks.Add(System.Reflection.Missing.Value);

            //“аблица.
            ObjWorkSheet = (Microsoft.Office.Interop.Excel.Worksheet)ObjWorkBook.Sheets[1];

            // ”становим альбомную ориентацию бумаги.
            ObjWorkSheet.PageSetup.Orientation = Microsoft.Office.Interop.Excel.XlPageOrientation.xlLandscape;

            // «ададим масштаб в 55%.
            ObjWorkSheet.PageSetup.Zoom = 70;

            // ”становим отступы с лева и с права = 0.
            ObjWorkSheet.PageSetup.LeftMargin = 0;
            ObjWorkSheet.PageSetup.RightMargin = 0;

            // ”становим отступ с низу и с вверху.
            ObjWorkSheet.PageSetup.TopMargin = 0;
            ObjWorkSheet.PageSetup.BottomMargin = 0;


            // ¬ыровним по центру.
            ObjWorkSheet.PageSetup.CenterHorizontally = true;

            // ”становим масштаб.
            //ObjExcel.ActiveWindow.Zoom = 50;



            //«апишем шапку
            //ќбъеденим €чейки
            ObjWorkSheet.get_Range("E1", "F1").Merge(Type.Missing);
            ObjWorkSheet.get_Range("E1", "F1").Font.Size = 12;
            ObjWorkSheet.get_Range("E1", "F1").Font.Bold = true;
            ObjWorkSheet.get_Range("E1", Type.Missing).Value2 = "”“¬≈–∆ƒ®Ќ";

            // ¬ыровним текст по горизонтали.
            ObjWorkSheet.get_Range("E1", Type.Missing).HorizontalAlignment = Excel.Constants.xlCenter;
            ObjWorkSheet.get_Range("E1", Type.Missing).VerticalAlignment = Excel.Constants.xlCenter;

            // «апишем текст в €чейки E2 F2. и установим размер шрифта 12, не жирный
            ObjWorkSheet.get_Range("E2", "F2").Merge(Type.Missing);
            ObjWorkSheet.get_Range("E2", "F2").Font.Size = 12;
            ObjWorkSheet.get_Range("E2", "F2").Font.Bold = false;
            ObjWorkSheet.get_Range("E2", Type.Missing).Value2 = "приказом и.о. директора \n√ ” —ќ \"÷ —«Ќ —аратовской области \" \n" +
                                                                "\nот 09.01.2019 г. є 25";

            // «ададим ширину столбцов E и F.
            ObjWorkSheet.get_Range("E1", "E1").ColumnWidth = width5Column;
            ObjWorkSheet.get_Range("F1", "F1").ColumnWidth = width5Column;

            // ”становим ширину строки.
            ObjWorkSheet.get_Range("E2", "E2").RowHeight = ширина—троки;
            ObjWorkSheet.get_Range("F2", "F2").RowHeight = ширина—троки;

            // «ададим ширину столбцов.
            ObjWorkSheet.get_Range("E2", Type.Missing).HorizontalAlignment = Excel.Constants.xlLeft;
            ObjWorkSheet.get_Range("E2", Type.Missing).VerticalAlignment = Excel.Constants.xlCenter;

            ObjWorkSheet.get_Range("F1", Type.Missing).HorizontalAlignment = Excel.Constants.xlLeft;
            ObjWorkSheet.get_Range("F1", Type.Missing).VerticalAlignment = Excel.Constants.xlCenter;

            // «апишем название журнала.
            ObjWorkSheet.get_Range("C5", "E5").Merge(Type.Missing);
            ObjWorkSheet.get_Range("C5", "E5").Font.Size = 12;
            ObjWorkSheet.get_Range("C5", "E5").Font.Bold = true;
            ObjWorkSheet.get_Range("C5", Type.Missing).Value2 = "∆урнал учЄта передачи персональных данных \n с "+ beginDate +" по "+endDate+" ";

            // «ададим ширину столбцов E и F.
            ObjWorkSheet.get_Range("C1", "C1").ColumnWidth = width5Column;
            ObjWorkSheet.get_Range("D1", "D1").ColumnWidth = width5Column;
            ObjWorkSheet.get_Range("E1", "E1").ColumnWidth = width5Column;

            // ¬ыровним текст по горизонтали.
            ObjWorkSheet.get_Range("C5", Type.Missing).HorizontalAlignment = Excel.Constants.xlCenter;
            ObjWorkSheet.get_Range("C5", Type.Missing).VerticalAlignment = Excel.Constants.xlCenter;

            ObjWorkSheet.get_Range("C5", "C5").RowHeight = ширина—троки2;

            // «апишем шапку таблицы.
            ObjWorkSheet.get_Range("A7", "A7").Merge(Type.Missing);
            ObjWorkSheet.get_Range("A7", Type.Missing).Value2 = "є п/п";

            // ¬ыровним текст по горизонтали.
            ObjWorkSheet.get_Range("A7", Type.Missing).HorizontalAlignment = Excel.Constants.xlCenter;
            ObjWorkSheet.get_Range("A7", Type.Missing).VerticalAlignment = Excel.Constants.xlCenter;


            // Ќарисуем границу.
            Excelячейка A7 = new Excelячейка();
            A7.√раницаячейки("A7", "A7", ObjWorkSheet);

            // «апишем шапку таблицы.
            ObjWorkSheet.get_Range("B7", "B7").Merge(Type.Missing);
            ObjWorkSheet.get_Range("B7", Type.Missing).Value2 = "—ведени€ о запрашивающем лице";

            ObjWorkSheet.get_Range("B7", "B7").ColumnWidth = widthColumn;

            // ¬ыровним текст по горизонтали.
            ObjWorkSheet.get_Range("B7", Type.Missing).HorizontalAlignment = Excel.Constants.xlCenter;
            ObjWorkSheet.get_Range("B7", Type.Missing).VerticalAlignment = Excel.Constants.xlCenter;


            // Ќарисуем границу.
            Excelячейка B7 = new Excelячейка();
            B7.√раницаячейки("B7", "B7", ObjWorkSheet);
            ObjWorkSheet.get_Range("B7", Type.Missing).HorizontalAlignment = Excel.Constants.xlCenter;

            string cell = "C7";
            ObjWorkSheet.get_Range(cell, cell).Merge(Type.Missing);
            ObjWorkSheet.get_Range(cell, Type.Missing).Value2 = " раткое содержание запроса или \nинициативной передачи ѕƒ";

            ObjWorkSheet.get_Range(cell, cell).ColumnWidth = widthShortContColumn;
            ObjWorkSheet.get_Range(cell, cell).RowHeight = ширина—троки2;

            // ¬ыровним текст по горизонтали.
            ObjWorkSheet.get_Range(cell, Type.Missing).HorizontalAlignment = Excel.Constants.xlCenter;
            ObjWorkSheet.get_Range(cell, Type.Missing).VerticalAlignment = Excel.Constants.xlCenter;


            // Ќарисуем границу.
            Excelячейка C7 = new Excelячейка();
            C7.√раницаячейки(cell, cell, ObjWorkSheet);
            ObjWorkSheet.get_Range(cell, Type.Missing).HorizontalAlignment = Excel.Constants.xlCenter;

            //  олонка D.
            string cellD = "D7";
            ObjWorkSheet.get_Range(cellD, cellD).Merge(Type.Missing);
            ObjWorkSheet.get_Range(cellD, Type.Missing).Value2 = "ќтметка о передаче или отказе в \nпередаче ѕƒ";

            ObjWorkSheet.get_Range(cellD, cellD).ColumnWidth = width5Column;
            ObjWorkSheet.get_Range(cellD, cellD).RowHeight = ширина—троки2;

            // ¬ыровним текст по горизонтали.
            ObjWorkSheet.get_Range(cellD, Type.Missing).HorizontalAlignment = Excel.Constants.xlCenter;
            ObjWorkSheet.get_Range(cellD, Type.Missing).VerticalAlignment = Excel.Constants.xlCenter;


            // Ќарисуем границу.
            Excelячейка D7 = new Excelячейка();
            D7.√раницаячейки(cellD, cellD, ObjWorkSheet);
            ObjWorkSheet.get_Range(cellD, Type.Missing).HorizontalAlignment = Excel.Constants.xlCenter;

            //  олонка E.
            string cellE = "E7";
            ObjWorkSheet.get_Range(cellE, cellE).Merge(Type.Missing);
            ObjWorkSheet.get_Range(cellE, Type.Missing).Value2 = "ƒата передачи (отказа в \nпередаче)ѕƒ";

            ObjWorkSheet.get_Range(cellE, cellE).ColumnWidth = width5Column;
            ObjWorkSheet.get_Range(cellE, cellE).RowHeight = ширина—троки2;

            // ¬ыровним текст по горизонтали.
            ObjWorkSheet.get_Range(cellE, Type.Missing).HorizontalAlignment = Excel.Constants.xlCenter;
            ObjWorkSheet.get_Range(cellE, Type.Missing).VerticalAlignment = Excel.Constants.xlCenter;


            // Ќарисуем границу.
            Excelячейка E7 = new Excelячейка();
            E7.√раницаячейки(cellE, cellE, ObjWorkSheet);
            ObjWorkSheet.get_Range(cellE, Type.Missing).HorizontalAlignment = Excel.Constants.xlCenter;


            //  олонка F.
            string cellF = "F7";
            ObjWorkSheet.get_Range(cellF, cellF).Merge(Type.Missing);
            ObjWorkSheet.get_Range(cellF, Type.Missing).Value2 = "ќснование передачи ѕƒ \n(номер запроса)";

            ObjWorkSheet.get_Range(cellF, cellF).ColumnWidth = width5Column;
            ObjWorkSheet.get_Range(cellF, cellF).RowHeight = ширина—троки2;

            // ¬ыровним текст по горизонтали.
            ObjWorkSheet.get_Range(cellF, Type.Missing).HorizontalAlignment = Excel.Constants.xlCenter;
            ObjWorkSheet.get_Range(cellF, Type.Missing).VerticalAlignment = Excel.Constants.xlCenter;


            // Ќарисуем границу.
            Excelячейка F7 = new Excelячейка();
            F7.√раницаячейки(cellF, cellF, ObjWorkSheet);
            ObjWorkSheet.get_Range(cellF, Type.Missing).HorizontalAlignment = Excel.Constants.xlCenter;

            // ЌачнЄм нумерацию строк с 8 строки, так как первые 7 строк зан€ты под шапку журнала.
            int iCount = 8;

            // —чЄтчик нумерации строк.
            int num = 1;

            // ”знаем количество пунктов в списке list.
            int countRowsReport = dictionary.Values.Count;// list.Count;

            // «аполн€ем таблицу данными.
            foreach (∆урналѕерƒанных item in dictionary.Values)
            {
                // ѕройдЄм по номерам столбцов.
                for (int i = 1; i <= 6; i++)
                {
                    // ѕолучим букву обозначаюущую столбец.
                    string exclB = Excelячейка.Ѕуква олонка(i);

                    switch(i)
                    {
                        case 1:
                            ObjWorkSheet.get_Range(exclB + iCount.ToString(), Type.Missing).Value2 = num.ToString().Trim();
                            

                            Excelячейка excCel = new Excelячейка();
                            excCel.√раницаячейки(exclB + iCount.ToString(), exclB + iCount.ToString(), ObjWorkSheet);
                            ObjWorkSheet.get_Range(exclB + iCount.ToString(), Type.Missing).HorizontalAlignment = Excel.Constants.xlCenter;
                            ObjWorkSheet.get_Range(exclB + iCount.ToString(), Type.Missing).VerticalAlignment = Excel.Constants.xlCenter;


                            break;
                        case 2:
                            ObjWorkSheet.get_Range(exclB + iCount.ToString(), Type.Missing).Value2 = item.ќписание орреспондента.Trim();
                            ObjWorkSheet.get_Range(exclB + iCount.ToString(), Type.Missing).WrapText = true;

                            Excelячейка excCelB = new Excelячейка();
                            excCelB.√раницаячейки(exclB + iCount.ToString(), exclB + iCount.ToString(), ObjWorkSheet);
                            ObjWorkSheet.get_Range(exclB + iCount.ToString(), Type.Missing).HorizontalAlignment = Excel.Constants.xlCenter;
                            ObjWorkSheet.get_Range(exclB + iCount.ToString(), Type.Missing).VerticalAlignment = Excel.Constants.xlCenter;

                            break;
                        case 3:
                            ObjWorkSheet.get_Range(exclB + iCount.ToString(), Type.Missing).Value2 = item. раткое—одержание.Trim();
                            ObjWorkSheet.get_Range(exclB + iCount.ToString(), Type.Missing).WrapText = true;

                            Excelячейка excCelC = new Excelячейка();
                            excCelC.√раницаячейки(exclB + iCount.ToString(), exclB + iCount.ToString(), ObjWorkSheet);
                            ObjWorkSheet.get_Range(exclB + iCount.ToString(), Type.Missing).HorizontalAlignment = Excel.Constants.xlCenter;
                            ObjWorkSheet.get_Range(exclB + iCount.ToString(), Type.Missing).VerticalAlignment = Excel.Constants.xlCenter;

                            break;
                        case 4:
                            ObjWorkSheet.get_Range(exclB + iCount.ToString(), Type.Missing).Value2 = item.Ќомер»сход€щий.Trim();

                            Excelячейка excCelD = new Excelячейка();
                            excCelD.√раницаячейки(exclB + iCount.ToString(), exclB + iCount.ToString(), ObjWorkSheet);
                            ObjWorkSheet.get_Range(exclB + iCount.ToString(), Type.Missing).HorizontalAlignment = Excel.Constants.xlCenter;
                            ObjWorkSheet.get_Range(exclB + iCount.ToString(), Type.Missing).VerticalAlignment = Excel.Constants.xlCenter;

                            break;
                        case 5:
                            ObjWorkSheet.get_Range(exclB + iCount.ToString(), Type.Missing).Value2 = item.ƒатаќтправки.Trim();

                            Excelячейка excCelE = new Excelячейка();
                            excCelE.√раницаячейки(exclB + iCount.ToString(), exclB + iCount.ToString(), ObjWorkSheet);
                            ObjWorkSheet.get_Range(exclB + iCount.ToString(), Type.Missing).HorizontalAlignment = Excel.Constants.xlCenter;
                            ObjWorkSheet.get_Range(exclB + iCount.ToString(), Type.Missing).VerticalAlignment = Excel.Constants.xlCenter;

                            break;
                        // ячейка F
                        case 6:
                            ObjWorkSheet.get_Range(exclB + iCount.ToString(), Type.Missing).Value2 = item.Ќомер¬ход€щий.Trim();

                            Excelячейка excCelF = new Excelячейка();
                            excCelF.√раницаячейки(exclB + iCount.ToString(), exclB + iCount.ToString(), ObjWorkSheet);
                            ObjWorkSheet.get_Range(exclB + iCount.ToString(), Type.Missing).HorizontalAlignment = Excel.Constants.xlCenter;
                            ObjWorkSheet.get_Range(exclB + iCount.ToString(), Type.Missing).VerticalAlignment = Excel.Constants.xlCenter;

                            break;
                    }
                }

                num++;
                iCount++;
            }

            // ƒобавим пользовател€ который сформировал отчЄт.

            // ”становим номер строки где будет размещЄн ‘»ќ пользовател€ который сформировал отчЄт, где countRowsReport - количество строк в списке с данными , а 11 - 8 строк в шапке + 3 строки отступить от таблицы.
            int numRow = countRowsReport + 11;

            string cellUsrE = "D" + numRow.ToString();
            string cellUsrF = "F" + numRow.ToString();

            ObjWorkSheet.get_Range(cellUsrE, cellUsrF).Merge(Type.Missing);
            ObjWorkSheet.get_Range(cellUsrE, cellUsrF).Font.Size = 10;
            ObjWorkSheet.get_Range(cellUsrE, cellUsrF).Font.Bold = false; ;
            ObjWorkSheet.get_Range(cellUsrE, Type.Missing).Value2 = "—формировал " + MyAplicationIdentity.GetUses();

            // ¬ыровним текст по горизонтали.
            ObjWorkSheet.get_Range(cellUsrE, Type.Missing).HorizontalAlignment = Excel.Constants.xlCenter;
            ObjWorkSheet.get_Range(cellUsrE, Type.Missing).VerticalAlignment = Excel.Constants.xlCenter;

            // ¬ыведим документ на экран.
            ObjExcel.Visible = true;
            ObjExcel.UserControl = true;


            #region —тара€ реализаци€ WORD

            //—оздаЄм новый Word.Application
    //        Microsoft.Office.Interop.Word.Application app = new Microsoft.Office.Interop.Word.Application();


    //            //«агружаем документ
    //            Microsoft.Office.Interop.Word.Document doc = null;

    //            object fileName = filName;
    //            object falseValue = false;
    //            object trueValue = true;
    //            object missing = Type.Missing;
    //            object writePasswordDocument = "12A86Asd";

    //            doc = app.Documents.Open(ref fileName, ref missing, ref trueValue,
    //ref missing, ref missing, ref missing, ref missing, ref writePasswordDocument,
    //ref missing, ref missing, ref missing, ref missing, ref trueValue,
    //ref missing, ref missing, ref missing);

    //            ////ƒата начало отчЄта.
    //            object wdrepl = WdReplace.wdReplaceAll;
    //            //object searchtxt = "GreetingLine";
    //            object searchtxt = "DATESTART";
    //            object newtxt = (object)beginDate;
    //            //object frwd = true;
    //            object frwd = false;
    //            doc.Content.Find.Execute(ref searchtxt, ref missing, ref missing, ref missing, ref missing, ref missing, ref frwd, ref missing, ref missing, ref newtxt, ref wdrepl, ref missing, ref missing,
    //            ref missing, ref missing);

    //            // ƒата окончани€ отчтЄта.
    //            object wdrepl2 = WdReplace.wdReplaceAll;
    //            //object searchtxt = "GreetingLine";
    //            object searchtxt2 = "DATEEND";
    //            object newtxt2 = (object)endDate;
    //            //object frwd = true;
    //            object frwd2 = false;
    //            doc.Content.Find.Execute(ref searchtxt2, ref missing, ref missing, ref missing, ref missing, ref missing, ref frwd2, ref missing, ref missing, ref newtxt2, ref wdrepl2, ref missing, ref missing,
    //            ref missing, ref missing);

    //            //¬ставить таблицу
    //            object bookNaziv = "таблица";
    //            Range wrdRng = doc.Bookmarks.get_Item(ref  bookNaziv).Range;

    //            object behavior = Microsoft.Office.Interop.Word.WdDefaultTableBehavior.wdWord8TableBehavior;
    //            object autobehavior = Microsoft.Office.Interop.Word.WdAutoFitBehavior.wdAutoFitWindow;


    //            Microsoft.Office.Interop.Word.Table table = doc.Tables.Add(wrdRng, 1, 6, ref behavior, ref autobehavior);
    //            table.Range.ParagraphFormat.SpaceAfter = 11;

    //            table.Columns[1].Width = 40;
    //            table.Columns[2].Width = 150;
    //            table.Columns[3].Width = 150;
    //            table.Columns[4].Width = 150;
    //            table.Columns[5].Width = 120;
    //            table.Columns[6].Width = 120;

    //            table.Borders.Enable = 1; // –амка - сплошна€ лини€
    //            table.Range.Font.Name = "Times New Roman";
    //            table.Range.Font.Size = 9;

    //            // «апишем шапку таблицы.
    //            table.Cell(1, 1).Range.Text = "є п/п";
    //            table.Cell(1, 2).Range.Text = "—ведени€ о запрашивающем лице";
    //            table.Cell(1, 3).Range.Text = " раткое содержание запроса или инициативной передачи ѕƒ";
    //            table.Cell(1, 4).Range.Text = "ќтметка о передаче или отказе в передаче ѕƒ";
    //            table.Cell(1, 5).Range.Text = "ƒата передачи(отказа в передаче)ѕƒ";
    //            table.Cell(1, 6).Range.Text = "ќснование передачи ѕƒ (номер запроса)";

    //            Object beforeRow1 = Type.Missing;
    //            table.Rows.Add(ref beforeRow1);


    //            int count = 1;

    //            // «аполним таблицу данными.
    //            foreach (∆урналѕерƒанных item in list)
    //            {
    //                table.Cell(count+1, 1).Range.Text = count.ToString().Trim();
    //                table.Cell(count+1, 2).Range.Text = item.ќписание орреспондента.Trim();
    //                table.Cell(count + 1, 3).Range.Text = item. раткое—одержание.Trim();
    //                table.Cell(count + 1, 4).Range.Text = item.Ќомер»сход€щий.Trim();
    //                table.Cell(count + 1, 5).Range.Text = item.ƒатаќтправки.Trim();
    //                table.Cell(count + 1, 6).Range.Text = item.Ќомер¬ход€щий.Trim();

    //                Object beforeRow2 = Type.Missing;
    //                table.Rows.Add(ref beforeRow2);

    //                count++;
    //            }

    //            //удалим последную строку
    //            table.Rows[count+1].Delete();

    //            // ƒобавим кто сформировал отчЄт.
    //            string user = MyAplicationIdentity.GetUses();

    //            string[] arryFIO = user.Split(' ');
    //            string инициалы»м€ = arryFIO[1].Substring(0, 1);
    //            string инициалыќтчество = arryFIO[2].Substring(0, 1);
    //            string fio = arryFIO[0] + " " + инициалы»м€ + "." + " " + инициалыќтчество + ".";

    //            // ƒата окончани€ отчтЄта.
    //            object wdrepl3 = WdReplace.wdReplaceAll;
    //            //object searchtxt = "GreetingLine";
    //            object searchtxt3 = "USER";
    //            object newtxt3 = (object)fio;
    //            //object frwd = true;
    //            object frwd3 = false;
    //            doc.Content.Find.Execute(ref searchtxt3, ref missing, ref missing, ref missing, ref missing, ref missing, ref frwd3, ref missing, ref missing, ref newtxt3, ref wdrepl3, ref missing, ref missing,
    //            ref missing, ref missing);



    //            // ќтобрпазим документ и закроем окно.
            //            app.Visible = true;
            #endregion

            this.Close();

        }

        private void button2_Click(object sender, EventArgs e)
        {
            this.Close();
        }

        /// <summary>
        /// ¬озвращает номера вход€щих писем.
        /// </summary>
        /// <param name="con"></param>
        /// <param name="ds"></param>
        /// <param name="id арточки"></param>
        /// <returns></returns>
        private string InputNumberPoust(SqlConnection con,DataSet ds, int id арточки, out string shortAbout)
        {
            string querSelect = "select CONVERT(nvarchar, Ќомерѕѕ) + N'/' + RTRIM(LTRIM(CONVERT(nvarchar, " +
                                                    "Ќомер¬ход))) AS 'Ќомер', раткое—одержание  from  арточка " +
                                                    "where id_карточки in ( " +
                                                    "select id_карточка¬ход€ща€ from dbo.—в€зующа€ арточка¬ход€ща€»сход€ща€ " +
                                                    "where id_карточка»сход€ща€ = " + Convert.ToInt32(id арточки) + ")";

            SqlDataAdapter daM = new SqlDataAdapter(querSelect, con);
            daM.Fill(ds, "¬ход€щие");

            // ѕолучим данные из таблицы которые соответсвуют 
            System.Data.DataTable tabM = ds.Tables["¬ход€щие"];

            // ’ранит итоговое значение.
            StringBuilder buld = new StringBuilder();

            // ’ранит описание письма.
            StringBuilder buldAbout = new StringBuilder();

            foreach (DataRow r in tabM.Rows)
            {
                buld.Append(r["Ќомер"].ToString().Trim() + ", \n");
                buldAbout.Append(r[" раткое—одержание"].ToString().Trim() + ", \n");
            }

            // ”далим последную зап€тую.
            int countChar = buld.Length;
            string numbers = string.Empty;

            if (countChar > 0)
            {
                numbers = buld.Remove(countChar - 3, 3).ToString();
            }

            // ”далим последную зап€тую из описани€.
            int countAbout = buldAbout.Length;
            string aboutS = string.Empty;

            // ѕрисвоим пустую строку.
            shortAbout = "";

            if (countAbout > 0)
            {
                aboutS = buldAbout.Remove(countAbout - 3, 3).ToString();
                shortAbout = aboutS;
            }


            ds.Tables["¬ход€щие"].Clear();

            return numbers.ToString().Trim();
        }
    }
}